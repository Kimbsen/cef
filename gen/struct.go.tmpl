// Code generated - DO NOT EDIT.

package cef

import (
	// #include "capi_gen.h"
	"C"
{{- if eq .GoName "Settings"}}
	"path/filepath"
{{- end}}
{{- if .NeedsUnsafeImport}}
	"unsafe"
{{- end}}
{{- if eq .GoName "Settings"}}

	"github.com/richardwilkes/toolbox/xio/fs/paths"
{{- end}}
)

// {{.GoName}} ({{.Name}} from {{.Position.Src}})
{{- $comment := .Position.Comment}}{{if $comment}}
{{$comment}}
{{- end}}
type {{.GoName}} struct {
{{- range .Fields}}
	// {{.Var.GoName}} ({{.Var.Name}})
{{- $comment := .Position.Comment}}{{if $comment}}
	{{$comment}}
{{- end}}
	{{.Var.GoName}} {{.Var.GoType}}
{{- end}}
}

// New{{.GoName}} creates a new {{.GoName}}.
func New{{.GoName}}() *{{.GoName}} {
	return &{{.GoName}}{
{{- if .NeedsSizeSet}}
		Size: C.sizeof_struct__{{.Name}},
{{- end}}
{{- if eq .GoName "Settings"}}
		NoSandbox: 1,
		CommandLineArgsDisabled: 1,
		LogSeverity: LogseverityWarning,
		CachePath: filepath.Join(paths.AppDataDir(), "cache"),
		UserDataPath: filepath.Join(paths.AppDataDir(), "data"),
		LogFile: filepath.Join(paths.AppLogDir(), "cef.log"),
{{- end}}
	}
}

func (d *{{.GoName}}) toNative(native *C.{{.Name}}) *C.{{.Name}} {
{{- range .Fields}}
	{{.ToNative}}
{{- end}}
	return native
}

func (d *{{.GoName}}) fromNative(native *C.{{.Name}}) *{{.GoName}} {
{{- range .Fields}}
	{{.FromNative}}
{{- end}}
	return d
}